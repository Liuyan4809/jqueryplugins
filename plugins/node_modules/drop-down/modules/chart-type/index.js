import DATA from './data.js'
// 默认配置
let g_default_options = {
  value:''//默认选中值
};
// 原始元素
let g_$origin = null;
// 主渲染元素DOM
let g_$target = null;
// 渲染的下拉内容主体
let g_$selectAnim = null;
/**
 * 渲染下拉内容
 */
function renderDOM() {
  let data = g_default_options.data.length ? g_default_options.data : g_default_options.data = DATA;
  let html = '';
  for (let i = 0, item;
    (item = data[i++]) && i < 20;) {
    html += `<dd 
              class="drop-down__item ${g_default_options.value == item[g_default_options.unique]?'drop-down__this':''}" 
              data-value="${item[g_default_options.unique]}">`;
    html +=
      `<i class="icon icon-list__brokenline" style="background-image:url(${item.icon})" data-icon="${item.icon}" data-iconHover="${item.iconHover}"></i>`;
    html += `<span class="">${item[g_default_options.display]}</span>`;
    html += '</dd>';
  }
  g_$selectAnim = g_$target.find('.drop-down__anim').html(html);
}

/**
 * 绑定事件
 */
function bindEvent() {
  // 绑定渲染对象事件
  bindTarget();
  // 绑定下拉项hover事件
  // bindHover();
}

/**
 * 绑定事件
 */
function bindTarget() {
  g_$target.on('click', function(e) {
    let $t = $(e.target);
    let $btn = $t.closest('.drop-down__button');
    let $dd = $t.closest('dd');
    let $i = $dd.find('.icon-list__brokenline');
    // 点击按钮
    if ($btn.length) {
      g_$target.toggleClass('drop-down__selected');
    }
    // 点击dd
    if ($dd.length) {
      let $other = $dd.toggleClass('drop-down__this').siblings();
      $other.removeClass('drop-down__this');
      $other.each(function(i) {
        let $that = $(this);
        let $i = $that.find('.icon-list__brokenline');
        $i.css('background-image', `url(${$i.data('icon')})`);
      });
      // 隐藏下拉列表
      g_$target.removeClass('drop-down__selected');
      // 如果选中值得话,触发change事件
      g_$origin.trigger('change', $dd.data('value'));
    }
  });
}

/**
 * 绑定hover事件
 */
function bindHover() {
  g_$target.find('.drop-down__item').on('mouseover', function(e) {
    let $that = $(this);
    let $i = $that.find('.icon-list__brokenline');
    $i.css('background-image', `url(${$i.data('iconhover')})`);
  });
  g_$target.find('.drop-down__item').on('mouseout', function(e) {
    let $that = $(this);
    let $i = $that.find('.icon-list__brokenline');
    if (!$that.hasClass('drop-down__this')) $i.css('background-image', `url(${$i.data('icon')})`);
  });
}

export default {
  render($target, option, $origin) {
    // 赋值属性
    g_$origin = $origin;
    g_$target = $target;
    g_default_options = option;
    // 渲染下拉内容
    renderDOM(g_$target, Object.assign(g_default_options, option));
    // 绑定事件
    bindEvent();
  }
}
